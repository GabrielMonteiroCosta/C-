using System;
using System.Collections.Generic;

class Program
{
    static void Main()
    {
        List<Produto> produtos = new();
        Console.WriteLine("Cadastro de Produtos!");

        double PegarValor(string texto)
        {
            while (true)
            {
                Console.WriteLine(texto);
                string? valor = Console.ReadLine();
                if (double.TryParse(valor, out double valorFinal))
                {
                    return valorFinal;
                }
                Console.WriteLine("Digite um valor em R$");
            }
        }

        while (true)
        {
            Console.WriteLine("\nDigite uma opção:" +
                "\n(1) Cadastrar um novo Produto" +
                "\n(2) Listar todos os Produtos cadastrados" +
                "\n(3) Remover um Produto" +
                "\n(0) Para sair e encerrar o programa");

            string opcao = Console.ReadLine();

            switch (opcao)
            {
                case "1":
                    int novoCodigo = 1;
                    if (produtos.Count > 0)
                    {
                        novoCodigo = produtos[produtos.Count - 1].Codigo + 1;
                    }
                    Console.WriteLine($"Novo código sugerido: {novoCodigo}");
                    Console.WriteLine("Insira a Descrição do Produto: ");
                    string descricao = Console.ReadLine();
                    double valorCusto = PegarValor("Insira o valor de Custo do produto: ");
                    double margemLucro = PegarValor("Insira a Margem de Lucro sobre o Produto: ");
                    double calculoMargem = (valorCusto * margemLucro) / 100;
                    double valorVenda = valorCusto + calculoMargem;
                    produtos.Add(new Produto(novoCodigo, descricao, valorVenda, valorCusto, margemLucro));
                    Console.WriteLine($"Produto cadastrado com sucesso!\nCódigo do produto: {novoCodigo}, Descrição: {descricao}, Valor de Venda: R${valorVenda}, Valor de Custo: R${valorCusto}, Margem de Lucro: {margemLucro}%");
                    break;
                case "2":
                    if (produtos.Count == 0)
                    {
                        Console.WriteLine("Nenhum produto cadastrado ainda.");
                    }
                    else
                    {
                        Console.WriteLine("Produtos cadastrados:");
                        foreach (Produto p in produtos)
                        {
                            Console.WriteLine($"Código: {p.Codigo}, Descrição: {p.Descricao}, Valor de Venda: R${p.ValorVenda}, Valor de Custo: R${p.ValorCusto}, Margem de Lucro: {p.MargemLucro}%");
                        }
                    }
                    break;
                case "3":
                    Console.WriteLine("Digite o código do produto que deseja remover:");
                    if (int.TryParse(Console.ReadLine(), out int codigoRemover))
                    {
                        Produto produtoRemover = produtos.Find(p => p.Codigo == codigoRemover);
                        if (produtoRemover != null)
                        {
                            produtos.Remove(produtoRemover);
                            Console.WriteLine("Produto removido com sucesso.");
                        }
                        else
                        {
                            Console.WriteLine("Produto não encontrado.");
                        }
                    }
                    else
                    {
                        Console.WriteLine("Código inválido.");
                    }
                    break;
                case "0":
                    Console.WriteLine("Encerrando o programa...");
                    return;
                default:
                    Console.WriteLine("Opção inválida. Tente novamente.");
                    break;
            }
        }
    }
}

public class Produto
{
    public Produto(int codigo, string descricao, double valorVenda, double valorCusto, double margemLucro)
    {
        this.Codigo = codigo;
        this.Descricao = descricao;
        this.ValorVenda = valorVenda;
        this.ValorCusto = valorCusto;
        this.MargemLucro = margemLucro;
    }

    public int Codigo { get; }
    public string Descricao { get; }
    public double ValorVenda { get; }
    public double ValorCusto { get; }
    public double MargemLucro { get; }
}
